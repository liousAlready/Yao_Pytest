{"name": "test_login_failed_invalid_data[case1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCases.test_login.TestLogin object at 0x04776290>\ncase = {'check': '请输入密码', 'passwd': '', 'user': '13252254992'}\nrefresh = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae69c468b0946087963865dbd5b1214e\")>\n\n    @allure.story(\"[Story]用户根据用户名密码登录系统\")\n    # @allure.title(\"[TiTile]case 登录失败逆向场景\")\n    # @allure.description(\"登录测试用例 执行人：李某\")\n    @pytest.mark.parametrize(\"case\", td.invalid_data)\n    def test_login_failed_invalid_data(self, case, refresh):\n        LoginPage(refresh).login(case['user'], case['passwd'])\n>       assert LoginPage(refresh).get_error_msg_from_login_area() == case['check']\n\nTestCases\\test_login.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjects\\login_page.py:28: in get_error_msg_from_login_area\n    return self.get_text(loc.error_tip_from_login_area, \"登录页面-获取登录区域错误提示信息\")\nCommon\\base_page.py:217: in get_text\n    ele = self.get_element(locator, page_action, timeout, poll_frequency)\nCommon\\base_page.py:134: in get_element\n    self.wait_page_contains_element(locator, page_action, timeout, poll_frequency)\nCommon\\base_page.py:110: in wait_page_contains_element\n    WebDriverWait(self.driver, timeout, poll_frequency).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ae69c468b0946087963865dbd5b1214e\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x047EB410>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "98aa99ca-3ba9-4357-af27-0705a033343f-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ebe47e82-ed03-42f5-8ee5-53e67e07216b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'user': '13252254992', 'passwd': '', 'check': '请输入密码'}"}], "start": 1636516706444, "stop": 1636516727704, "uuid": "96b49bc5-5718-4bbb-bf7d-e23068593797", "historyId": "1352fcf7b98c3a086b04449cfbf3bcb3", "testCaseId": "98e067a681f547a2e44e78c948720b9e", "fullName": "TestCases.test_login.TestLogin#test_login_failed_invalid_data", "labels": [{"name": "epic", "value": "[epic]盛杰运营后台"}, {"name": "story", "value": "[Story]用户根据用户名密码登录系统"}, {"name": "tag", "value": "@pytest.mark.usefixtures('refresh')"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-OTOI92D"}, {"name": "thread", "value": "17268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_login"}]}